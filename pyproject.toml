[build-system]
requires = [
  "setuptools>=42",
  "setuptools-scm>=7",
]
build-backend = "setuptools.build_meta"

[project]
name = "regionmask"
authors = [{name = "regionmask developers", email = "mathias.hauser@env.ethz.com"}]
license = "MIT"
keywords = ['region mask geospatial']
description = "create masks of geospatial regions for arbitrary grids"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.10"
dependencies = [
    "geopandas >= 0.13",
    "numpy >= 1.24",
    "packaging >= 23.1",
    "pooch >= 1.7",
    "rasterio >= 1.3",
    "shapely >= 2.0",
    "xarray >= 2023.07",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/regionmask/regionmask"
Documentation = "https://regionmask.readthedocs.io/"
Source = "https://github.com/regionmask/regionmask"
BugReports = "https://github.com/regionmask/regionmask/issues"

[project.optional-dependencies]
full = [
  "regionmask[viz]",
  "cf_xarray",
]
viz = [
    "cartopy",
    "matplotlib",
    "nc-time-axis",
]

[dependency-groups]
docs = [
    "regionmask[full]",
    # dependencies for the examples
    "netcdf4",
    # for regionmask intake example
    "aiohttp",
    "fsspec",
    "intake_geopandas",
    # dependencies to build the docs
    "myst-nb",
    "numpydoc",
    "pickleshare", # https://github.com/ipython/ipython/issues/14237
    "sphinx",
    "sphinx_rtd_theme",
    "sphinxext-rediraffe",
]
tests = [
    "pytest-cov",
    "pytest-xdist",
    "pytest",
]
dev = [
    "regionmask[full, docs, tests]",
    "black !=23",
    "ruff",
]

[tool.setuptools.packages]
find = {namespaces = false}  # Disable implicit namespaces

[tool.setuptools_scm]
fallback_version = "999"
version_scheme = "no-guess-dev"

[tool.ruff]
# also check notebooks
extend-include = ["*.ipynb"]
target-version = "py310"

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let the formatter worry about this
# E731: do not assign a lambda expression, use a def
ignore = [
  "E402",
  "E501",
  "E731",
]
select = [
  "F", # Pyflakes
  "E", # Pycodestyle
  "W", # warnings
  "I", # isort
  "UP", # Pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["regionmask"]

[tool.coverage.run]
omit = ["*/regionmask/tests/*"]

[tool.pytest.ini_options]
addopts = ["--strict-markers", "--durations=10"]
python_files = "test_*.py"
testpaths = "regionmask/tests"
filterwarnings = [
  "ignore:The ``method`` argument is internal and  will be removed in the future:FutureWarning"
]


[tool.mypy]
exclude = [
  'build', "dist"
]
files = "regionmask"

show_error_context = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true


[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "affine.*",
  "cartopy.*",
  "geopandas.*",
  "pooch.*",
  "pyogrio.*",
  "rasterio.*",
  "shapely.*",
]

[tool.typos]

[tool.typos.default]
extend-ignore-identifiers-re = [
  # Variable names
  "nd_.*",
  ".*_nd",
  # Function/class names
  "NDArray.*",
  ".*NDArray.*",
]

[tool.typos.default.extend-words]

# regions
CNA = "CNA"

# numpy
arange = "arange"
nd = "nd"

[tool.typos.type.jupyter]
# avoid fixing the id hashes in jupyter notebooks
extend-ignore-re = [
    "\"id\": \".*\"",
]
