name: CI Additional
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: py${{ matrix.python-version }}-${{ matrix.env }}
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - env: "bare-minimum"
            python-version: "3.7"
          - env: "min-all-deps"
            python-version: "3.7"
          - env: "min-all-deps"
            python-version: "3.8"
          - env: "shapely_lt_2"
            python-version: "3.10"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: Set environment variables
        run: |
            PY=${{ matrix.python-version }}
            # replace "." in matrix.python-version
            PY=${PY//./}
            echo "CONDA_ENV_FILE=ci/requirements/py${PY}-${{ matrix.env }}.yml" >> $GITHUB_ENV

      - name: Create conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-downloads: true
          cache-downloads-key: "${{runner.os}}-${{runner.arch}}-py${{matrix.python-version}}"
          environment-file: ${{ env.CONDA_ENV_FILE }}
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Install regionmask
        run: |
          python -m pip install --no-deps -e .

      - name: Version info
        run: |
          conda info -a
          conda list
      - name: Import regionmask
        run: |
          python -c "import regionmask"
      - name: Run tests
        timeout-minutes: 15
        run: python -u -m pytest
          --cov=regionmask
          --cov-report=xml
          $PYTEST_EXTRA_FLAGS

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests,${{ matrix.env }}
          env_vars: RUNNER_OS
          name: codecov-umbrella
          fail_ci_if_error: false

  min-version-policy:
    name: Minimum Version Policy
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: Create conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: min-version-policy
          micromamba-version: 'latest'
          create-args: >-
            python=3.10
            pyyaml
            conda
            python-dateutil
          channels: conda-forge

      - name: minimum versions policy
        run: |
          python ci/min_deps_check.py ci/requirements/py37-min-all-deps.yml ci/requirements/py38-min-all-deps.yml
