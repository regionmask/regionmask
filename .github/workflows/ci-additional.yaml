name: CI Additional
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: py${{ matrix.python-version }}-${{ matrix.env }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        env:
          [
            "bare-minimum",
            "min-all-deps",
          ]
        python-version: ["3.7"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: Set environment variables
        run: |
            PY=${{ matrix.python-version }}
            # replace "." in matrix.python-version
            PY=${PY//./}
            echo "CONDA_ENV_FILE=ci/requirements/py${PY}-${{ matrix.env }}.yml" >> $GITHUB_ENV
      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: |
            ~/conda_pkgs_dir
            ~/.cache/regionmask/
          key:
            ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{ matrix.env }}-${{ hashFiles('ci/requirements/**.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-py${{ matrix.python-version }}-
            ${{ runner.os }}-

      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: regionmask-tests
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE

      - name: Install regionmask
        run: |
          python -m pip install --no-deps -e .

      - name: Version info
        run: |
          conda info -a
          conda list
      - name: Import regionmask
        run: |
          python -c "import regionmask"
      - name: Run tests
        timeout-minutes: 15
        run: python -u -m pytest
          --cov=regionmask
          --cov-report=xml
          $PYTEST_EXTRA_FLAGS

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests,${{ matrix.env }}
          env_vars: RUNNER_OS
          name: codecov-umbrella
          fail_ci_if_error: false

  min-version-policy:
    name: Minimum Version Policy
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          auto-update-conda: false
          python-version: "3.8"

      - name: minimum versions policy
        run: |
          mamba install -y pyyaml conda python-dateutil
          python ci/min_deps_check.py ci/requirements/py37-min-all-deps.yml
